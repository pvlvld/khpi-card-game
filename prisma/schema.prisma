// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique @db.VarChar(50)
  avatarUrl String?  @map("avatar_url") @db.VarChar(255)

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)

  // Relations
  oauthProviders OAuthProvider[]
  gamesAsWinner  Game[]          @relation("Winner")
  gamesAsLoser   Game[]          @relation("Loser")
  accounts       Account[]

  @@map("user")
}

enum OAuthProviderType {
  Google
  GitHub
  Telegram
}

model OAuthProvider {
  id         Int               @id @default(autoincrement())
  userId     Int               @map("user_id")
  provider   OAuthProviderType
  providerId String            @map("provider_id") @db.VarChar(255)
  createdAt  DateTime          @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime          @updatedAt @map("updated_at") @db.Timestamp(6)

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerId])
  @@map("oauth_provider")
}

model Account {
  id           Int     @id @default(autoincrement())
  userId       Int     @map("user_id")
  username     String  @unique @db.VarChar(50)
  provider     String  @db.VarChar(50)
  providerId   String  @map("provider_id") @db.VarChar(100)
  passwordHash String? @map("password_hash") @db.VarChar(255)

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerId])
  @@map("accounts")
}

model Game {
  id        Int      @id @default(autoincrement())
  winnerId  Int?     @map("winner_id")
  loserId   Int?     @map("loser_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)

  // Relations
  winner User? @relation("Winner", fields: [winnerId], references: [id], onDelete: SetNull)
  loser  User? @relation("Loser", fields: [loserId], references: [id], onDelete: SetNull)

  @@map("game")
}

model Card {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String?  @db.Text
  imageUrl    String   @map("image_url") @db.VarChar(255)
  cost        Int
  damage      Int
  defence     Int
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamp(6)

  @@unique([name])
  @@map("cards")
}
